<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>59.0</apiVersion>
    <assignments>
        <name>Assign</name>
        <label>Assign</label>
        <locationX>270</locationX>
        <locationY>1403</locationY>
        <assignmentItems>
            <assignToReference>OpportunityLoop.CIB_EditRole_OP_Team__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>FormulaRemoveRole1</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>OpportunityLoop.CIB_Opportunity_Edit__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>FormulaRemoveAlias1</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>OpportunityLoop.CIB_EditRole_OP_Team__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>FormulaAddRole1</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>OpportunityLoop.CIB_Opportunity_Edit__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>FormulaAddAlias1</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TeamOptyListToDelete</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>GetFirstOptyTeam</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>OptyTeamToInsert.OpportunityId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>OpportunityLoop.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>OptyTeamToInsert.OpportunityAccessLevel</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>OptyTeamToInsert.Ruolo__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetBanker1.UserRole.Name</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>OptyTeamToInsert.UserId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>GetBanker1.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ListOptyTeamToInsert</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>OptyTeamToInsert</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_banker_2</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Add_Banker2</name>
        <label>Assign</label>
        <locationX>270</locationX>
        <locationY>2111</locationY>
        <assignmentItems>
            <assignToReference>OpportunityLoop.CIB_EditRole_OP_Team__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>FormulaAddRole2</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>OpportunityLoop.CIB_Opportunity_Edit__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>FormulaAddAlias2</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>SecondOptyTeamToInsert.OpportunityId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>OpportunityLoop.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>SecondOptyTeamToInsert.OpportunityAccessLevel</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>SecondOptyTeamToInsert.Ruolo__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetBanker2.UserRole.Name</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>SecondOptyTeamToInsert.UserId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetBanker2.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ListOptyTeamToInsert</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>SecondOptyTeamToInsert</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AssignOpp</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignBanker2</name>
        <label>Assign</label>
        <locationX>270</locationX>
        <locationY>1811</locationY>
        <assignmentItems>
            <assignToReference>OpportunityLoop.CIB_EditRole_OP_Team__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>FormulaRemoveRole2</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>OpportunityLoop.CIB_Opportunity_Edit__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>FormulaRemoveAlias2</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TeamOptyListToDelete</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>GetSecondOptyTeam</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_Banker_2</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignOpp</name>
        <label>Assign</label>
        <locationX>402</locationX>
        <locationY>2303</locationY>
        <assignmentItems>
            <assignToReference>OpportunityToUpdate</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>OpportunityLoop</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>OpportunityLoop</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Add_Banker_2</name>
        <label>Add Banker 2</label>
        <locationX>402</locationX>
        <locationY>2003</locationY>
        <defaultConnector>
            <targetReference>AssignOpp</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>not_null_add_banker2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetOldBanker2.Name</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>GetBanker2.Name</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetBanker2</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Add_Banker2</targetReference>
            </connector>
            <label>not null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_banker_2</name>
        <label>Check banker 2</label>
        <locationX>402</locationX>
        <locationY>1595</locationY>
        <defaultConnector>
            <targetReference>Add_Banker_2</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>not_null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetOldBanker2</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetSecondOptyTeam</targetReference>
            </connector>
            <label>not null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Field_Changed</name>
        <label>Check Field Changed</label>
        <locationX>336</locationX>
        <locationY>323</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Direzione_Territoriale_Changed</name>
            <conditionLogic>(1 OR 2) AND 3</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Banker_1__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.Banker_1__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Banker_2__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.Banker_2__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeName__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IBC</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetCIBVisibilitaOpportunia</targetReference>
            </connector>
            <label>Direzione Territoriale Changed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_TeamOptyListToDelete_not_null</name>
        <label>Check TeamOptyListToDelete not null</label>
        <locationX>182</locationX>
        <locationY>2603</locationY>
        <defaultConnector>
            <targetReference>Insert_Opportunity_Team</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>not_null_delete_team_list</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>TeamOptyListToDelete</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Delete_Oppotunity_Team</targetReference>
            </connector>
            <label>not null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Chek_Changed_banker1</name>
        <label>Chek Changed banker1</label>
        <locationX>402</locationX>
        <locationY>1295</locationY>
        <defaultConnector>
            <targetReference>Check_banker_2</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>changed_banker1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Banker_1__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.Banker_1__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign</targetReference>
            </connector>
            <label>changed</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>AliasOldBanker1</name>
        <dataType>String</dataType>
        <expression>{!GetOldBanker1.Alias}+ &apos;,&apos;</expression>
    </formulas>
    <formulas>
        <name>FormulaAddAlias1</name>
        <dataType>String</dataType>
        <expression>IF(CONTAINS({!OpportunityLoop.CIB_Opportunity_Edit__c},{!GetBanker1.Alias}),
{!OpportunityLoop.CIB_Opportunity_Edit__c},
{!OpportunityLoop.CIB_Opportunity_Edit__c}+{!GetBanker1.Alias}&amp;&apos;,&apos;)</expression>
    </formulas>
    <formulas>
        <name>FormulaAddAlias2</name>
        <dataType>String</dataType>
        <expression>IF(CONTAINS({!OpportunityLoop.CIB_Opportunity_Edit__c},{!GetBanker2.Alias}),
{!OpportunityLoop.CIB_Opportunity_Edit__c},
{!OpportunityLoop.CIB_Opportunity_Edit__c}+{!GetBanker2.Alias}&amp;&apos;,&apos;)</expression>
    </formulas>
    <formulas>
        <name>FormulaAddRole1</name>
        <dataType>String</dataType>
        <expression>IF(CONTAINS({!OpportunityLoop.CIB_EditRole_OP_Team__c},{!GetBanker1.CRM_PermissionSet__c}),
{!OpportunityLoop.CIB_EditRole_OP_Team__c},
{!OpportunityLoop.CIB_EditRole_OP_Team__c}+{!GetBanker1.CRM_PermissionSet__c}&amp;&apos;,&apos;)</expression>
    </formulas>
    <formulas>
        <name>FormulaAddRole2</name>
        <dataType>String</dataType>
        <expression>IF(CONTAINS({!OpportunityLoop.CIB_EditRole_OP_Team__c},{!GetBanker2.CRM_PermissionSet__c}),
{!OpportunityLoop.CIB_EditRole_OP_Team__c},
{!OpportunityLoop.CIB_EditRole_OP_Team__c}+{!GetBanker2.CRM_PermissionSet__c}&amp;&apos;,&apos;)</expression>
    </formulas>
    <formulas>
        <name>FormulaRemoveAlias1</name>
        <dataType>String</dataType>
        <expression>IF(CONTAINS({!OpportunityLoop.CIB_Opportunity_Edit__c}, {!AliasOldBanker1}),
SUBSTITUTE({!OpportunityLoop.CIB_Opportunity_Edit__c}, {!AliasOldBanker1}, &apos;&apos;),{!OpportunityLoop.CIB_Opportunity_Edit__c})</expression>
    </formulas>
    <formulas>
        <name>FormulaRemoveAlias2</name>
        <dataType>String</dataType>
        <expression>IF(AND(NOT(ISNULL({!GetOldBanker2.Alias})),CONTAINS({!OpportunityLoop.CIB_Opportunity_Edit__c}, {!GetOldBanker2.Alias})),
SUBSTITUTE({!OpportunityLoop.CIB_Opportunity_Edit__c}, {!GetOldBanker2.Alias}+&apos;,&apos;, &apos;&apos;),{!OpportunityLoop.CIB_Opportunity_Edit__c})</expression>
    </formulas>
    <formulas>
        <name>FormulaRemoveRole1</name>
        <dataType>String</dataType>
        <expression>IF(CONTAINS({!OpportunityLoop.CIB_EditRole_OP_Team__c}, {!RoleOldBanker1}),
SUBSTITUTE({!OpportunityLoop.CIB_EditRole_OP_Team__c}, {!RoleOldBanker1}, &apos;&apos;),{!OpportunityLoop.CIB_EditRole_OP_Team__c})</expression>
    </formulas>
    <formulas>
        <name>FormulaRemoveRole2</name>
        <dataType>String</dataType>
        <expression>IF(AND(NOT(ISNULL({!GetOldBanker2.CRM_PermissionSet__c})),CONTAINS({!OpportunityLoop.CIB_EditRole_OP_Team__c}, {!GetOldBanker2.CRM_PermissionSet__c})),
SUBSTITUTE({!OpportunityLoop.CIB_EditRole_OP_Team__c}, {!GetOldBanker2.CRM_PermissionSet__c}+&apos;,&apos;, &apos;&apos;),{!OpportunityLoop.CIB_EditRole_OP_Team__c})</expression>
    </formulas>
    <formulas>
        <name>RoleOldBanker1</name>
        <dataType>String</dataType>
        <expression>{!GetOldBanker1.CRM_PermissionSet__c}+&apos;,&apos;</expression>
    </formulas>
    <interviewLabel>CIB Update Visibilità Object Table {!$Flow.CurrentDateTime}</interviewLabel>
    <label>CIB Update Visibilità Object Table</label>
    <loops>
        <name>OpportunityLoop</name>
        <label>OpportunityLoop</label>
        <locationX>182</locationX>
        <locationY>1079</locationY>
        <collectionReference>GetAllOpportunity</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>GetFirstOptyTeam</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_Opportunity</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Insert_Opportunity_Team</name>
        <label>Insert Opportunity Team</label>
        <locationX>182</locationX>
        <locationY>2903</locationY>
        <inputReference>ListOptyTeamToInsert</inputReference>
    </recordCreates>
    <recordDeletes>
        <name>Delete_Oppotunity_Team</name>
        <label>Delete Oppotunity Team</label>
        <locationX>50</locationX>
        <locationY>2711</locationY>
        <connector>
            <targetReference>Insert_Opportunity_Team</targetReference>
        </connector>
        <inputReference>TeamOptyListToDelete</inputReference>
    </recordDeletes>
    <recordLookups>
        <name>GetAllOpportunity</name>
        <label>GetAllOpportunity</label>
        <locationX>182</locationX>
        <locationY>971</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>OpportunityLoop</targetReference>
        </connector>
        <filterLogic>((1 AND 2) OR (3 AND 4)) AND 5 AND 6</filterLogic>
        <filters>
            <field>CIB_EditRole_OP_Team__c</field>
            <operator>Contains</operator>
            <value>
                <elementReference>GetOldBanker1.CRM_PermissionSet__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>CIB_Opportunity_Edit__c</field>
            <operator>Contains</operator>
            <value>
                <elementReference>GetOldBanker1.Alias</elementReference>
            </value>
        </filters>
        <filters>
            <field>CIB_EditRole_OP_Team__c</field>
            <operator>Contains</operator>
            <value>
                <elementReference>GetOldBanker2.CRM_PermissionSet__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>CIB_Opportunity_Edit__c</field>
            <operator>Contains</operator>
            <value>
                <elementReference>GetOldBanker2.Alias</elementReference>
            </value>
        </filters>
        <filters>
            <field>CC_Direzione_regionale__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetCIBVisibilitaOpportunia.Direzione_Territoriale__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Informazioni_Privilegiate__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>No</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Opportunity</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetBanker1</name>
        <label>GetBanker1</label>
        <locationX>182</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetBanker2</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetCIBVisibilitaOpportunia.Banker_1__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetBanker2</name>
        <label>GetBanker2</label>
        <locationX>182</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetOldBanker1</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetCIBVisibilitaOpportunia.Banker_2__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetCIBVisibilitaOpportunia</name>
        <label>GetCIBVisibilitàOpportunità</label>
        <locationX>182</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetBanker1</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CIB_Visibilita_Opportunita__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetFirstOptyTeam</name>
        <label>GetFirstOptyTeam</label>
        <locationX>402</locationX>
        <locationY>1187</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Chek_Changed_banker1</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OpportunityId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>OpportunityLoop.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetOldBanker1.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>OpportunityTeamMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetOldBanker1</name>
        <label>GetOldBanker1</label>
        <locationX>182</locationX>
        <locationY>755</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetOldBanker2</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.Banker_1__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetOldBanker2</name>
        <label>GetOldBanker2</label>
        <locationX>182</locationX>
        <locationY>863</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetAllOpportunity</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record__Prior.Banker_2__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetSecondOptyTeam</name>
        <label>GetSecondOptyTeam</label>
        <locationX>270</locationX>
        <locationY>1703</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssignBanker2</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OpportunityId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>OpportunityLoop.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetOldBanker2.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>OpportunityTeamMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Opportunity</name>
        <label>Update Opportunity</label>
        <locationX>182</locationX>
        <locationY>2495</locationY>
        <connector>
            <targetReference>Check_TeamOptyListToDelete_not_null</targetReference>
        </connector>
        <inputReference>OpportunityToUpdate</inputReference>
    </recordUpdates>
    <start>
        <locationX>210</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Check_Field_Changed</targetReference>
        </connector>
        <object>CIB_Visibilita_Opportunita__c</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>AliasOldBankersList</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>BankersAliasList</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>BankersRoleList</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ListOptyTeamToInsert</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OpportunityTeamMember</objectType>
    </variables>
    <variables>
        <name>OpportunityIdsList</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>OpportunityToUpdate</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Opportunity</objectType>
    </variables>
    <variables>
        <name>OptyTeamToInsert</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OpportunityTeamMember</objectType>
    </variables>
    <variables>
        <name>PermissionOldBankers</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>SecondOptyTeamToInsert</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OpportunityTeamMember</objectType>
    </variables>
    <variables>
        <name>TeamOptyListToDelete</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OpportunityTeamMember</objectType>
    </variables>
</Flow>
