global with sharing class spostamentoNDGFromCSVBatch implements Database.Batchable<String>, Database.Stateful
{
    //file csv scomposto
	global List<String> gblCsvRowFields;
    global List<String> gblCsvUpdatedFields;
	//record di log da aggiornare
	global SV_CSVLoad__c gblFileRecordLog;
    global list<WrapperCSVResult> resultList;
    global map<string, WrapperCSVResult> resultMap;

    global string gblNumeroRiga;

    global string gblCsvName;
    global boolean KO = false;

    global spostamentoNDGFromCSVBatch(Blob versionData, SV_CSVLoad__c mtdFileRecordLog, String mtdCsvName)
    {
        //memorizzo il file ed il log ed istanzio le mappe
		gblCsvRowFields = versionData.toString().split('\n');
        gblCsvUpdatedFields = new list<string>();
		gblFileRecordLog = mtdFileRecordLog;
		gblCsvName = mtdCsvName;
        resultList = new list<WrapperCSVResult>();
        resultMap = new map<string, WrapperCSVResult>();
    }

    global List<String> start(Database.BatchableContext context) 
    {
		//gblFileRecordLog.job_ids__c += ' - ' + context.getJobId();

        return gblCsvRowFields;
	}

    global void execute(Database.BatchableContext context, List<String> scope) 
    {
        try 
        {
            map<string, Account> accMap = new map<string, Account>();
            Map<string, Account> filialiMap = new Map<string, Account>();
            Set<String> setAcc = new set<String>();
            list<WrapperCSVResult> eddy = new list<WrapperCSVResult>();
            set<String> ndgSet = new set<String>();
            set<String> abiSet = new set<String>();
            set<String> filialeSet = new set<String>();
            for(String val : scope) 
            {
                System.debug('LL DEBUG saveObjects scope: ' + val);
                list<String> valSplit = val.split(';');
                WrapperCSVResult result = new WrapperCSVResult();
                result.abi = valSplit[0];
                result.ndg = valSplit[1];
                result.ced_destinazione = valSplit[2];
                result.mds_destinazione = valSplit[3];
                result.ptf_partenza = valSplit[4];
                result.ptf_destinazione = valSplit[5];
                result.matricola = valSplit[6];
                result.tag = valSplit[7];
                result.ptf_dest_individuato = valSplit[8];
                result.ptf_data = valSplit[9];
                result.error = valSplit[10];

                if(result.error == 'OK')
                {
                    eddy.add(result);
                    ndgSet.add(result.ndg);
                    abiSet.add(result.abi);
                    filialeSet.add(result.ced_destinazione);
                }
            }

            for(account acc : [SELECT id ,PTF_IdCEDFiliale__c,  PTF_Portafoglio__c,PTF_Portafoglio__r.Name, CRM_NDG__c, FinServ__BankNumber__c
                            FROM  Account WHERE (CRM_NDG__c in :ndgSet AND FinServ__BankNumber__c = :abiSet) OR PTF_IdCEDFiliale__c  IN : filialeSet])
            {
                if(ndgSet.contains(acc.CRM_NDG__c) && abiSet.contains(acc.FinServ__BankNumber__c))
                {
                    accMap.put(acc.FinServ__BankNumber__c+acc.CRM_NDG__c,acc);
                }
                if(filialeSet.contains(acc.PTF_IdCEDFiliale__c))
                {
                    filialiMap.put(acc.PTF_IdCEDFiliale__c, acc);
                }
            }

            for(WrapperCSVResult result : eddy) 
            {
                if(!result.ptf_destinazione.contains('#') && accMap.get(result.abi+result.ndg) != null) 
                {
                    accMap.get(result.abi+result.ndg).PTF_Portafoglio__c = result.ptf_dest_individuato;
                    accMap.get(result.abi+result.ndg).PTF_Filiale__c = filialiMap.get(result.ced_destinazione).Id;
                }
                //else mapWallet = creaPortafogli();
            }

            update accMap.values();
        } 
        catch (Exception e)
        {
            KO = true;
        }
    }

    global void finish(Database.BatchableContext context) 
    {

		//gblFileRecordLog.Data_Fine_Elaborazione__c = System.now();
		//gblFileRecordLog.stato__c = 'Completato' ;


        //invio notifica completamento??
        Messaging.CustomNotification notification = new Messaging.CustomNotification();
        string notifId = [select id from CustomNotificationType limit 1].Id;
        notification.setNotificationTypeId(notifId);
        if(KO)
        {
            notification.setTargetId(gblFileRecordLog.Id); // target object id
            notification.setTitle(Label.Elaborazione_csv_error_title);
            notification.setBody(Label.Elaborazione_csv_error_body);
        }
        else 
        {
            gblFileRecordLog.Status__c = 'Completed';
            
            update gblFileRecordLog;
            //String pageRef = '{ type:"standard__objectPage",attributes:{objectApiName:"FV_Ghost_Account__c",actionName:"list"},"state":{"filterName":"All"}}';
            //notification.setTargetPageRef(pageRef); // target object id
            notification.setTitle(Label.Elaborazione_csv_success_notifica_title);
            notification.setBody(Label.Elaborazione_csv_success_body);
        }
        notification.send(new set<String>{(string) UserInfo.getUserId()});
	}

    public static map<string, wallet__c> creaPortafogli(list<wrapperResult> listResult, map<string, account> accMap, map<string, account> mapFiliali)
    {
        map<string, wallet__c> mapWallet = new map<string, wallet__c>();
        return mapWallet;
    }

    /*..........................................*/
    /* Wrapper class to display Input Data from CSV*/
    /*.........................................*/

    public class WrapperResult {
 
        //@AuraEnabled public final String numeroRiga;
        //@AuraEnabled public String modelloServizio;
        public String abi;
        public String ndg;
        public String csd_destinazione;
        public String mds_destinazione;
        public String ptf_partenza;
        public String ptf_destinazione;
        public String matricola;
        public String tag;
        public String numeroRiga;
    
        //parametri che mi servono per la creazione del portafoglio
        public  String filiale;
        public  String banca;
        public  String dirRegionale;
        public  String area;
        public  String capofila;
        public  String idReferente;
        
        
    }

    public class WrapperCSVResult
    {
        public String abi;
        public String ndg;
        public String ced_destinazione;
        public String mds_destinazione;
        public String ptf_partenza;
        public String ptf_destinazione;
        public String matricola;
        public String tag;
        public String ptf_dest_individuato;
        public String ptf_data;
        public String numeroRiga;
        public String error;
    }
    public static void testRun() { 
        Integer i = 0;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
    }
}